{"ast":null,"code":"import{useState,useRef,useEffect}from'react';export const GetPlpProducts=elPerPagelimit=>{const[isLoading,setIsLoading]=useState();const[isError,setIsError]=useState(false);const[loadImages,setLoadImages]=useState([]);const counterRef=useRef(1);//function to navigate through the images - 10 images\nconst fetchPlpProducts=(isPrevButton,isOnLoad)=>{setIsLoading(true);if(!isOnLoad){isPrevButton?counterRef.current--:counterRef.current++;// console.log('click on prev button',counterRef.current );\n}fetch('https://picsum.photos/v2/list?page='+counterRef.current+'&limit='+elPerPagelimit).then(res=>res.json()).then(response=>{setLoadImages(response);setIsLoading(false);},error=>{setIsLoading(false);setIsError(error);});};//use of the useeffect hook to prevent the function to be called over and over\nuseEffect(()=>{fetchPlpProducts(false,true);},[]);return{isLoading,isError,loadImages,counterRef,fetchPlpProducts};};","map":{"version":3,"names":["useState","useRef","useEffect","GetPlpProducts","elPerPagelimit","isLoading","setIsLoading","isError","setIsError","loadImages","setLoadImages","counterRef","fetchPlpProducts","isPrevButton","isOnLoad","current","fetch","then","res","json","response","error"],"sources":["/Users/elisabeth.vicente/Documents/sites/my-typescript-app/src/components/helper/api.tsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { dataApiProps } from '../data/interfaces';\n\nexport const GetPlpProducts = (elPerPagelimit : number) => {\n    \n    const [isLoading, setIsLoading] = useState<boolean>();\n    const [isError, setIsError] = useState<boolean>(false);\n    const [loadImages, setLoadImages] = useState([]);\n    const counterRef = useRef(1);\n  \n    //function to navigate through the images - 10 images\n    const fetchPlpProducts = (isPrevButton: boolean, isOnLoad: boolean) =>{\n      setIsLoading(true);\n      if ( !isOnLoad ){\n        isPrevButton ? counterRef.current-- : counterRef.current++;\n        // console.log('click on prev button',counterRef.current );\n      }\n  \n      fetch('https://picsum.photos/v2/list?page='+counterRef.current+'&limit='+elPerPagelimit)\n      .then(res => res.json())\n      .then(\n        (response) => {\n          setLoadImages(response);\n          setIsLoading(false);\n        },\n        (error) => {\n          setIsLoading(false);\n          setIsError(error);\n        }\n      );\n    }\n    //use of the useeffect hook to prevent the function to be called over and over\n    useEffect(() => {\n      fetchPlpProducts(false, true);\n    }, []);\n  \n    return {\n      isLoading,\n      isError,\n      loadImages,\n      counterRef,\n      fetchPlpProducts,\n    };\n  }"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAGnD,MAAO,MAAM,CAAAC,cAAc,CAAIC,cAAuB,EAAK,CAEvD,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAU,CAAC,CACrD,KAAM,CAACO,OAAO,CAAEC,UAAU,CAAC,CAAGR,QAAQ,CAAU,KAAK,CAAC,CACtD,KAAM,CAACS,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAW,UAAU,CAAGV,MAAM,CAAC,CAAC,CAAC,CAE5B;AACA,KAAM,CAAAW,gBAAgB,CAAGA,CAACC,YAAqB,CAAEC,QAAiB,GAAI,CACpER,YAAY,CAAC,IAAI,CAAC,CAClB,GAAK,CAACQ,QAAQ,CAAE,CACdD,YAAY,CAAGF,UAAU,CAACI,OAAO,EAAE,CAAGJ,UAAU,CAACI,OAAO,EAAE,CAC1D;AACF,CAEAC,KAAK,CAAC,qCAAqC,CAACL,UAAU,CAACI,OAAO,CAAC,SAAS,CAACX,cAAc,CAAC,CACvFa,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACFG,QAAQ,EAAK,CACZV,aAAa,CAACU,QAAQ,CAAC,CACvBd,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CACAe,KAAK,EAAK,CACTf,YAAY,CAAC,KAAK,CAAC,CACnBE,UAAU,CAACa,KAAK,CAAC,CACnB,CACF,CAAC,CACH,CAAC,CACD;AACAnB,SAAS,CAAC,IAAM,CACdU,gBAAgB,CAAC,KAAK,CAAE,IAAI,CAAC,CAC/B,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLP,SAAS,CACTE,OAAO,CACPE,UAAU,CACVE,UAAU,CACVC,gBACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}